{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","kitty","name","alt","email","CardList","kitten","map","id","SearchBox","placeholder","changeHandler","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredkitten","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAIO,SAASA,EAAMC,GACpB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,MAAMC,KAAtC,oCAA8EC,IAAI,UAC1F,6BAAKL,EAAMG,MAAMC,OACjB,4BAAIJ,EAAMG,MAAMG,WCLf,IAAMC,EAAW,SAACP,GACtB,OAAO,qBAAKC,UAAU,YAAf,SAELD,EAAMQ,OAAOC,KAAI,SAAAN,GAAK,OACnB,cAACJ,EAAD,CAAqBI,MAAOA,GAAjBA,EAAMO,UCLZC,G,MAAY,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,cACtC,OAAQ,uBAAOZ,UAAU,SAASa,KAAK,SACxBF,YAAaA,EACbG,SAAUF,MCoCZG,E,kDApCb,aAAe,IAAD,8BACZ,gBAaFH,cAAgB,SAACI,GACf,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,QAAQ,gBAb7C,EAAKC,MAAQ,CACXd,OAAQ,GACRW,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,OAAQmB,S,oBAO1C,WACE,MAA8BC,KAAKN,MAA5Bd,EAAP,EAAOA,OAAQW,EAAf,EAAeA,YACTU,EAAiBrB,EAAOsB,QAAO,SAAA3B,GAAK,OACxCA,EAAMC,KAAK2B,cAAcC,SAASb,EAAYY,kBAChD,OACE,sBAAK9B,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACEW,YAAY,mBACZC,cAAee,KAAKf,gBAEtB,cAAC,EAAD,CAAUL,OAAQqB,W,GA9BRI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3ec0a795.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\n\r\nexport function Card (props) {\r\n  return (\r\n    <div className='card-container'>\r\n      <img src={`https://robohash.org/${props.kitty.name}?set=set4&size=180x180&bgset=bg1`} alt=\"kitty\"/>\r\n      <h2>{props.kitty.name}</h2>\r\n      <p>{props.kitty.email}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n   return <div className='card-list'>\r\n    {\r\n     props.kitten.map(kitty =>\r\n        <Card key={kitty.id} kitty={kitty}/>\r\n     )}\r\n  </div>\r\n};\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, changeHandler}) => {\r\n  return  <input className='search' type=\"search\"\r\n                 placeholder={placeholder}\r\n                 onChange={changeHandler}/>\r\n};","import {Component} from 'react';\r\nimport './App.css';\r\nimport {CardList} from './components/card-list/card-list.component.jsx';\r\nimport {SearchBox} from \"./components/search-box/search-box.component\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      kitten: [],\r\n      searchField: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({kitten: users}));\r\n  }\r\n\r\n  changeHandler = (e)=>{\r\n    this.setState({searchField: e.target.value}, ()=>{});\r\n  }\r\n\r\n  render() {\r\n    const {kitten, searchField} = this.state;\r\n    const filteredkitten = kitten.filter(kitty =>\r\n      kitty.name.toLowerCase().includes(searchField.toLowerCase()));\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Kitty Paradise</h1>\r\n        <SearchBox\r\n          placeholder='search kitty puh'\r\n          changeHandler={this.changeHandler}\r\n        />\r\n        <CardList kitten={filteredkitten}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}