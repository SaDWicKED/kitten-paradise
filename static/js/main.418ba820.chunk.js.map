{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","kitty","name","alt","email","CardList","kitten","map","id","SearchBox","placeholder","changeHandler","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredkitten","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAIO,SAASA,EAAMC,GACpB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,MAAMC,KAAtC,oCAA8EC,IAAI,UAC1F,6BAAKL,EAAMG,MAAMC,OACjB,4BAAIJ,EAAMG,MAAMG,WCLf,IAAMC,EAAW,SAACP,GACtB,OAAO,qBAAKC,UAAU,YAAf,SAELD,EAAMQ,OAAOC,KAAI,SAAAN,GAAK,OACnB,cAACJ,EAAD,CAAqBI,MAAOA,GAAjBA,EAAMO,UCLZC,G,MAAY,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,cACtC,OAAQ,uBAAOZ,UAAU,SAASa,KAAK,SACxBF,YAAaA,EACbG,SAAUF,MCoCZG,E,kDApCb,aAAe,IAAD,8BACZ,gBAaFH,cAAgB,SAACI,GACf,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,QAAQ,gBAb7C,EAAKC,MAAQ,CACXd,OAAQ,GACRW,YAAa,IAJH,E,gEAQO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,OAAQmB,S,+BAOhC,IAAD,EACuBC,KAAKN,MAA5Bd,EADA,EACAA,OAAQW,EADR,EACQA,YACTU,EAAiBrB,EAAOsB,QAAO,SAAA3B,GAAK,OACxCA,EAAMC,KAAK2B,cAAcC,SAASb,EAAYY,kBAChD,OACE,sBAAK9B,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACEW,YAAY,eACZC,cAAee,KAAKf,gBAEtB,cAAC,EAAD,CAAUL,OAAQqB,W,GA9BRI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.418ba820.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\n\nexport function Card (props) {\n  return (\n    <div className='card-container'>\n      <img src={`https://robohash.org/${props.kitty.name}?set=set4&size=180x180&bgset=bg1`} alt=\"kitty\"/>\n      <h2>{props.kitty.name}</h2>\n      <p>{props.kitty.email}</p>\n    </div>\n  )\n}\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n   return <div className='card-list'>\r\n    {\r\n     props.kitten.map(kitty =>\r\n        <Card key={kitty.id} kitty={kitty}/>\r\n     )}\r\n  </div>\r\n};\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, changeHandler}) => {\r\n  return  <input className='search' type=\"search\"\r\n                 placeholder={placeholder}\r\n                 onChange={changeHandler}/>\r\n};","import {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component.jsx';\nimport {SearchBox} from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      kitten: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({kitten: users}));\n  }\n\n  changeHandler = (e)=>{\n    this.setState({searchField: e.target.value}, ()=>{});\n  }\n\n  render() {\n    const {kitten, searchField} = this.state;\n    const filteredkitten = kitten.filter(kitty =>\n      kitty.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Kitty Paradise</h1>\n        <SearchBox\n          placeholder='search kitty'\n          changeHandler={this.changeHandler}\n        />\n        <CardList kitten={filteredkitten}/>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}